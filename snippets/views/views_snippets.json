{
  "Consulta all": {
    "prefix": "all_nova_data",
    "body": [
      "${1:SeuObjeto}.objects.all()\n"
    ],
    "description": "Consulta all"
  },

  "Args": {
    "prefix": "args_nova_data",
    "body": [
      "*args"
    ],
    "description": "Args"
  },

  "Args kwargs": {
    "prefix": "args_kwargs_nova_data",
    "body": [
      "*args, **kwargs"
    ],
    "description": "Args kwargs"
  },

  "Uma CreateView": {
    "prefix": "create_view_nova_data",
    "body": [
      "from django.contrib.auth.mixins import LoginRequiredMixin",
      "from django.urls import reverse_lazy",
      "from django.views.generic.edit import CreateView\n",

      "from ..forms import ${1:SuaModel}Form",
      "from ...models import ${1:SuaModel}\n\n",


      "class ${1:SuaModel}Create(LoginRequiredMixin, CreateView):",
        "\tmodel = ${1:SuaModel}\n",

        "\tform_class = ${1:SuaModel}Form\n",

        "\ttemplate_name = '${2:caminho/para/o/template}.html'\n",

        "\tdef get_success_url(self):",    
          "\t\tfrom django.http import reverse_lazy",
          "\t\treturn reverse_lazy('${3:redirect_name_url}')\n",

        "\tdef get_context_data(self, **kwargs):",
          "\t\tcontext = super().get_context_data(**kwargs)\n",

          "\t\t\n",

          "\t\treturn context\n"
    ],
    "description": "Uma CreateView"
  },

  "Uma DeleteView": {
    "prefix": "delete_view_nova_data",
    "body": [
      "from django.contrib.auth.mixins import LoginRequiredMixin",
      "from django.views.generic.edit import DeleteView\n",

      "from ...models import ${1:SuaModel}\n\n",


      "class ${1:SuaModel}Delete(LoginRequiredMixin, DeleteView):",
        "\tmodel = ${1:SuaModel}",
        "\ttemplate_name = '${2:caminho/para/o/template}.html'\n",

        "\tdef get_success_url(self):",    
          "\t\tfrom django.http import reverse_lazy",
          "\t\treturn reverse_lazy('${3:redirect_name_url}')\n",

        "\tdef get_context_data(self, **kwargs):",
          "\t\tcontext = super().get_context_data(**kwargs)\n",
          
          "\t\t\n",

          "\t\treturn context\n"
    ],
    "description": "Uma DeleteView"
  },

  "Consulta filter": {
    "prefix": "filter_nova_data",
    "body": [
      "${1:SeuObjeto}.objects.filter(",
        "\t${2:campo=alguma_coisa}",
      ")\n"
    ],
    "description": "Consulta filter"
  },

  "Consulta get": {
    "prefix": "get_nova_data",
    "body": [
      "${1:SeuObjeto}.objects.get(${2:campo=alguma_coisa})\n"
    ],
    "description": "Consulta get"
  },

  "Função get context data": {
    "prefix": "get_context_data_nova_data",
    "body": [
      "def get_context_data(self, **kwargs):",
        "\tcontext = super().get_context_data(**kwargs)\n",

        "\tcontext['${1:campo}'] = ${2:alguma_coisa}\n",
        
        "\treturn context\n"
    ],
    "description": "Função get context data"
  },

  "Consulta filter com select_related": {
    "prefix": "filter_select_related_nova_data",
    "body": [
      "${1:SeuObjeto}.objects.select_related(",
        "\t'${2:campos_fk_que_serao_usados}",
      ").filter(${3:campo=alguma_coisa})\n"
    ],
    "description": "Consulta filter com select_related"
  },

  "Consulta get com select_related": {
    "prefix": "get_select_related_nova_data",
    "body": [
      "${1:SeuObjeto}.objects.select_related(",
        "\t'${2:campos_fk_que_serao_usados}",
      ").get(${3:campo=alguma_coisa})\n"
    ],
    "description": "Consulta get com select_related"
  },
  
  "Uma ListView": {
    "prefix": "list_view_nova_data",
    "body": [
      "from django.contrib.auth.mixins import LoginRequiredMixin",
      "from django.views.generic.list import ListView\n",

      "from ...models import ${1:SuaModel}\n\n",


      "class ${1:SuaModel}ListView(LoginRequiredMixin, ListView):",
          "\tmodel = ${1:SuaModel}",
          "\ttemplate_name = '${2:caminho/para/o/template}.html'\n",

          "\tdef get_context_data(self, **kwargs):",
            "\t\tcontext = super().get_context_data(**kwargs)\n",
  
            "\t\t\n",
  
            "\t\treturn context\n"
    ],
    "description": "Uma ListView"
  },
  
  "Uma UpdateView": {
    "prefix": "update_view_nova_data",
    "body": [
      "from django.contrib.auth.mixins import LoginRequiredMixin",
      "from django.views.generic.edit import UpdateView\n",

      "from ...models import ${1:SuaModel}\n\n",


      "class ${1:SuaModel}UpdateView(LoginRequiredMixin, UpdateView):",
          "\tmodel = ${1:SuaModel}",
          "\ttemplate_name = '${2:caminho/para/o/template}.html'\n",

          "\tdef get_context_data(self, **kwargs):",
            "\t\tcontext = super().get_context_data(**kwargs)\n",
  
            "\t\t\n",
  
            "\t\treturn context\n",

            "\tdef get_success_url(self):",    
              "\t\tfrom django.http import reverse_lazy",
              "\t\treturn reverse_lazy('${3:redirect_name_url}')\n",

            "\tdef get_context_data(self, **kwargs):",
              "\t\tcontext = super().get_context_data(**kwargs)\n",

              "\t\t\n",

              "\t\treturn context\n"
    ],
    "description": "Uma UpdateView"
  },
  
  "Uma view com retorno json": {
    "prefix": "view_json_nova_data",
    "body": [
      "import json\n",

      "from django.contrib.auth.decorators import login_required",
      "from django.http import JsonResponse\n",



      "@login_required",
      "def $TM_FILENAME_BASE(request):",
          "\tdata = json.loads(request.body.decode('utf-8'))\n",
          
          "\t$1\n",
          
          "\tif example:",
            "\t\treturn JsonResponse({'message': '${2:Mensagem de sucesso}'})",
          "\telse:",
            "\t\treturn JsonResponse({'error': '${3:Mensagem de erro}'}) # Padrão aconselhável\n"
    ],
    "description": "Uma view com retorno json"
  },
  
  "Uma view": {
    "prefix": "view_nova_data",
    "body": [
      "from django.contrib.auth.decorators import login_required",
      "from django.shortcuts import render\n\n",

      "@login_required",
      "def $TM_FILENAME_BASE(request):",
      "\tcontext = {",
        "\t\t",
      "\t}\n",

      "\treturn render(",
      "\t\trequest,",
      "\t\t'${1:caminho/para/o/template}.html',",
      "\t\tcontext",
      "\t)\n"
    ],
    "description": "Uma view"
  },
  
  "Uma view com redirect": {
    "prefix": "view_redirect_nova_data",
    "body": [
      "from django.contrib.auth.decorators import login_required",
      "from django.shortcuts import redirect",
      "from django.urls import reverse_lazy\n\n",
    
    
      "@login_required",
      "def $TM_FILENAME_BASE(request):",
        "\t$1\n",
    
        "\treturn redirect(reverse_lazy('${2:name_da_url}'))\n"
    ],
    "description": "Uma view com redirect"
  }
}
